"use strict";
!(function (e) {
    e.extend(e.easing, {
        def: "easeOutQuad",
        swing: function (t, i, n, s, a) {
            return e.easing[e.easing.def](t, i, n, s, a);
        },
        easeOutQuad: function (e, t, i, n, s) {
            return -n * (t /= s) * (t - 2) + i;
        },
        easeInOutQuart: function (e, t, i, n, s) {
            return (t /= s / 2) < 1 ? (n / 2) * t * t * t * t + i : (-n / 2) * ((t -= 2) * t * t * t - 2) + i;
        },
        easeOutQuint: function (e, t, i, n, s) {
            return n * ((t = t / s - 1) * t * t * t * t + 1) + i;
        },
    }),
        (theme.defaults.popup = {
            fixedContentPos: !0,
            closeOnBgClick: !1,
            removalDelay: 350,
            callbacks: {
                beforeOpen: function () {
                    if (this.fixedContentPos) {
                        var t = window.innerWidth - document.body.clientWidth;
                        e(".sticky-content.fixed").css("padding-right", t), e(".mfp-wrap").css("overflow", "hidden auto");
                    }
                },
                close: function () {
                    this.fixedContentPos && (e(".mfp-wrap").css("overflow", ""), e(".sticky-content.fixed").css("padding-right", ""));
                },
            },
        }),
        (theme.defaults.popupPresets = {
            login: {
                type: "ajax",
                mainClass: "mfp-login mfp-fade",
                tLoading: '<div class="login-popup"><div class="d-loading"><i></i></div></div>',
                preloader: !0,
                items: { src: alpha_vars.ajax_url },
                ajax: { settings: { method: "post", data: { action: "alpha_account_form", nonce: alpha_vars.nonce } }, cursor: "mfp-ajax-cur" },
            },
            video: { type: "iframe", mainClass: "mfp-fade", preloader: !1, closeBtnInside: !1 },
            firstpopup: {
                type: "inline",
                mainClass: "mfp-popup-template mfp-newsletter-popup mfp-flip-popup",
                callbacks: {
                    beforeClose: function () {
                        e('.mfp-alpha .popup .hide-popup input[type="checkbox"]').prop("checked") && theme.setCookie("hideNewsletterPopup", !0, 7);
                    },
                },
            },
            popup_template: {
                type: "ajax",
                mainClass: "mfp-popup-template mfp-flip-popup",
                tLoading: '<div class="popup-template"><div class="d-loading"><i></i></div></div>',
                preloader: !0,
                items: { src: alpha_vars.ajax_url },
                ajax: { settings: { method: "post" }, cursor: "mfp-ajax-cur" },
            },
        }),
        (theme.defaults.slider = { a11y: !1, containerModifierClass: "slider-container-", slideClass: "slider-slide", wrapperClass: "slider-wrapper", slideActiveClass: "slider-slide-active", slideDuplicateClass: "slider-slide-duplicate" }),
        (theme.defaults.sliderPresets = {
            "product-single-carousel": { pagination: !1, navigation: !0, autoHeight: !0, thumbs: { slideThumbActiveClass: "active" } },
            "product-gallery-carousel": { spaceBetween: 20, slidesPerView: e(".main-content-wrap > .sidebar-fixed").length ? 2 : 3, navigation: !0, pagination: !1, breakpoints: { 768: { slidesPerView: 2 } } },
            "product-thumbs": { slidesPerView: 4, navigation: !0, pagination: !1, spaceBetween: 10, normalizeSlideIndex: !1, freeMode: !0, watchSlidesVisibility: !0, watchSlidesProgress: !0 },
            "compare-slider": { spaceBetween: 10, slidesPerView: 2, breakpoints: { 992: { spaceBetween: 30, slidesPerView: 4 }, 768: { spaceBetween: 20, slidesPerView: 3 } } },
            "products-flipbook": {
                onInitialized: function () {
                    function t(t) {
                        e(t.target).closest(".product-single-carousel, .product-gallery-carousel, .product-thumbs").length && t.stopPropagation();
                    }
                    this.wrapperEl.addEventListener("mousedown", t), "ontouchstart" in document && this.wrapperEl.addEventListener("touchstart", t, { passive: !0 });
                },
            },
        }),
        (theme.preventDefault = function (e) {
            e.preventDefault();
        }),
        (theme.initTemplate = function (e) {
            theme.lazyload(e),
                theme.slider(e.find(".slider-wrapper")),
                theme.isotopes(e.find(".grid")),
                theme.woocommerce && "function" == typeof theme.woocommerce.initProducts && theme.woocommerce.initProducts(e),
                "function" == typeof theme.countdown && theme.countdown(e.find(".countdown")),
                theme.call(function () {
                    theme.$window.trigger("alpha_loadmore");
                }, 300),
                theme.$body.trigger("alpha_init_tab_template");
        }),
        (theme.loadTemplate = function (t) {
            var i = "",
                n = alpha_vars.resource_split_tasks;
            (alpha_vars.resource_split_tasks = 0),
                t.children(".load-template").each(function () {
                    i += this.text;
                }),
                i &&
                    (t.html(i),
                    theme.skeleton
                        ? theme.skeleton(e(".skeleton-body"), function () {
                              theme.initTemplate(t);
                          })
                        : theme.initTemplate(t)),
                (alpha_vars.resource_split_tasks = n);
        }),
        (theme.windowResized = function (e) {
            return e == theme.resizeTimeStamp || ((theme.resizeChanged = theme.canvasWidth != window.innerWidth), (theme.canvasWidth = window.innerWidth), (theme.resizeTimeStamp = e)), theme.resizeChanged;
        }),
        (theme.setCookie = function (e, t, i) {
            var n = new Date();
            n.setTime(n.getTime() + 24 * i * 60 * 60 * 1e3), (document.cookie = e + "=" + t + ";expires=" + n.toUTCString() + ";path=/");
        }),
        (theme.getCookie = function (e) {
            for (var t = e + "=", i = document.cookie.split(";"), n = 0; n < i.length; ++n) {
                for (var s = i[n]; " " == s.charAt(0); ) s = s.substring(1);
                if (0 == s.indexOf(t)) return s.substring(t.length, s.length);
            }
            return "";
        }),
        (theme.scrollTo = function (t, i) {
            var n = void 0 === i ? 0 : i;
            if ("number" == typeof t) a = t;
            else {
                var s = theme.$(t).closest(":visible");
                if (s.length) {
                    var a = s.offset().top,
                        o = e("#wp-toolbar");
                    window.innerWidth > 600 && o.length && (a -= o.parent().outerHeight()),
                        e(".sticky-content.fix-top.fixed").each(function () {
                            a -= this.offsetHeight;
                        });
                }
            }
            e("html,body").stop().animate({ scrollTop: a }, n);
        }),
        (theme.scrollToFixedContent = function (t, i) {
            var n = 0,
                s = window.innerWidth > 600 && e("#wp-toolbar").parent().length ? e("#wp-toolbar").parent().outerHeight() : 0;
            e(".sticky-content.fix-top").each(function () {
                if (e(this).hasClass("toolbox-top")) {
                    var t = e(this).css("padding-top").slice();
                    t.length > 2 && (n -= Number(t.slice(0, -2)));
                } else {
                    var i = e(this).hasClass("fixed");
                    (n += e(this).addClass("fixed").outerHeight()), i || e(this).removeClass("fixed");
                }
            }),
                theme.scrollTo(t - n - s, i);
        }),
        (theme.getUrlParam = function (e, t) {
            var i,
                n = document.createElement("a");
            (n.href = decodeURIComponent(decodeURI(e))), (i = n.search).startsWith("?") && (i = i.substr(1));
            var s = {};
            return (
                i.split("&").forEach(function (e) {
                    var t = e.indexOf("=");
                    t >= 0 && (s[e.substr(0, t)] = e.substr(t + 1));
                }),
                s[t] ? s[t] : ""
            );
        }),
        (theme.addUrlParam = function (e, t, i) {
            var n,
                s,
                a = document.createElement("a");
            return (
                (e = decodeURIComponent(decodeURI(e))),
                (a.href = e),
                0 <= (n = a.search).indexOf(t + "=") ? (s = n.replace(new RegExp(t + "=[^&]*"), t + "=" + i)) : ((s = n.length && 0 <= n.indexOf("?") ? n : "?").endsWith("?") || (s += "&"), (s += t + "=" + i)),
                encodeURI(e.replace(n, "") + s.replace(/&+/, "&"))
            );
        }),
        (theme.removeUrlParam = function (e, t) {
            var i,
                n,
                s = document.createElement("a");
            return (
                (e = decodeURIComponent(decodeURI(e))),
                (s.href = e),
                0 <= (i = s.search).indexOf(t + "=")
                    ? ((n = i
                          .replace(new RegExp(t + "=[^&]*"), "")
                          .replace(/&+/, "&")
                          .replace("?&", "?")).endsWith("&") && (n = n.substr(0, n.length - 1)),
                      n.endsWith("?") && (n = n.substr(0, n.length - 1)),
                      (n = n.replace("&&", "&")))
                    : (n = i),
                encodeURI(e.replace(i, "") + n)
            );
        }),
        (theme.showMore = function (e) {
            theme.$(e).after('<div class="d-loading relative"><i></i></div>');
        }),
        (theme.hideMore = function (e) {
            theme.$(e).children(".d-loading").remove();
        }),
        (theme.countTo = function (t, i = !1) {
            e.fn.countTo &&
                theme.$(t).each(function () {
                    var t = e(this);
                    function n() {
                        setTimeout(function () {
                            var e = {
                                onComplete: function () {
                                    t.addClass("complete");
                                },
                            };
                            t.data("duration") && (e.speed = t.data("duration")),
                                t.data("from-value") && (e.from = t.data("from-value")),
                                t.data("to-value") && (e.to = t.data("to-value")),
                                (e.decimals = e.to && "string" == typeof e.to && e.to.indexOf(".") >= 0 ? e.to.length - e.to.indexOf(".") - 1 : 0),
                                t.countTo(e);
                        }, 300);
                    }
                    i ? n() : theme.appear(this, n);
                });
        }),
        (theme.parallax = function (t, i) {
            e.fn.themePluginParallax &&
                theme.$(t).each(function () {
                    var t = e(this);
                    t.themePluginParallax(e.extend(!0, theme.parseOptions(t.attr("data-parallax-options")), i));
                });
        });
    var t = e.fn.block;
    e.fn.block = function (e) {
        return "complete" == theme.status && (this.append('<div class="d-loading"><i></i></div>'), t.call(this, e)), this;
    };
    var i = e.fn.unblock;
    (e.fn.unblock = function (e) {
        return (
            "complete" == theme.status &&
                (i.call(this, e),
                this.hasClass("processing") || this.parents(".processing").length || this.children(".d-loading").remove(),
                theme.woocommerce && "function" == typeof theme.woocommerce.initAlertAction && theme.woocommerce.initAlertAction()),
            this
        );
    }),
        (theme.stickyContent = (function () {
            function t(e, t) {
                return this.init(e, t);
            }
            function i() {
                theme.$window.trigger("sticky_refresh.alpha", { index: 0, offsetTop: window.innerWidth > 600 && e("#wp-toolbar").length && e("#wp-toolbar").parent().is(":visible") ? e("#wp-toolbar").parent().outerHeight() : 0 });
            }
            function n(e) {
                (e && !theme.windowResized(e.timeStamp)) || (theme.$window.trigger("sticky_refresh_size.alpha"), theme.requestFrame(i));
            }
            return (
                (t.prototype.init = function (t, i) {
                    (this.$el = t),
                        (this.options = e.extend(!0, {}, theme.defaults.sticky, i, theme.parseOptions(t.attr("data-sticky-options")))),
                        (this.scrollPos = window.pageYOffset),
                        (this.originalHeight = this.$el.outerHeight()),
                        theme.$window.on("sticky_refresh.alpha", this.refresh.bind(this)).on("sticky_refresh_size.alpha", this.refreshSize.bind(this));
                }),
                (t.prototype.refreshSize = function (e) {
                    var t = window.innerWidth >= this.options.minWidth && window.innerWidth <= this.options.maxWidth;
                    void 0 === this.top && (this.top = this.options.top),
                        window.innerWidth >= 768 && this.getTop
                            ? (this.top = this.getTop())
                            : this.options.top ||
                              ((this.top = this.isWrap ? this.$el.parent().offset().top : this.$el.offset().top + this.$el[0].offsetHeight),
                              this.$el.find(".toggle-menu.show-home").length && (this.top += this.$el.find(".toggle-menu .dropdown-box")[0].offsetHeight)),
                        this.isWrap ? t || this.unwrap() : t && this.wrap(),
                        e && theme.requestTimeout(this.refreshSize.bind(this), 50);
                }),
                (t.prototype.wrap = function () {
                    this.$el.wrap('<div class="sticky-content-wrapper"></div>'), (this.isWrap = !0);
                }),
                (t.prototype.unwrap = function () {
                    this.$el.unwrap(".sticky-content-wrapper"), (this.isWrap = !1);
                }),
                (t.prototype.refresh = function (t, i) {
                    var n = window.pageYOffset,
                        s = this.$el;
                    this.refreshSize(),
                        e(".fixed.fix-top").each(function () {
                            n += e(this).outerHeight();
                        }),
                        n >= this.top + this.originalHeight && this.isWrap
                            ? ((this.height = s[0].offsetHeight),
                              s.hasClass("fixed") || s.parent().css("height", this.height + "px"),
                              this.options.scrollMode
                                  ? ((this.scrollPos >= window.pageYOffset && s.hasClass("fix-top")) || (this.scrollPos <= window.pageYOffset && s.hasClass("fix-bottom"))
                                        ? (s.addClass("fixed"), this.onFixed && this.onFixed())
                                        : (s.removeClass("fixed").css({ "margin-top": "", "margin-bottom": "", "z-index": "" }), this.onUnfixed && this.onUnfixed()),
                                    (this.scrollPos = window.pageYOffset))
                                  : (s.addClass("fixed"), this.onFixed && this.onFixed()),
                              s.hasClass("fixed") && s.hasClass("fix-top")
                                  ? ((this.zIndex = this.options.max_index - e(".fix-top").index(s)), s.css({ "margin-top": i.offsetTop + "px", "z-index": this.zIndex }))
                                  : s.hasClass("fixed") && s.hasClass("fix-bottom")
                                  ? ((this.zIndex = this.options.max_index - i.index), s.css({ "margin-bottom": i.offsetBottom + "px", "z-index": this.zIndex }))
                                  : s.css({ transition: "opacity .5s" }),
                              s.hasClass("fixed") && (s.hasClass("fix-top") ? (i.offsetTop += s[0].offsetHeight) : s.hasClass("fix-bottom") && (i.offsetBottom += s[0].offsetHeight)))
                            : (s.parent().css("height", ""), s.removeClass("fixed").css({ "margin-top": "", "margin-bottom": "", "z-index": "" }), this.onUnfixed && this.onUnfixed());
                }),
                theme.$window.on("alpha_complete", function () {
                    window.addEventListener("scroll", i, { passive: !0 }),
                        theme.$window.on("resize", n),
                        setTimeout(function () {
                            n();
                        }, 1e3);
                }),
                function (i, n) {
                    theme.$(i).each(function () {
                        var i = e(this);
                        i.data("sticky-content") || i.data("sticky-content", new t(i, n));
                    });
                }
            );
        })()),
        (theme.alert = function (t) {
            theme.$body.on("click", t + " .btn-close", function (i) {
                i.preventDefault(),
                    e(this).closest(".elementor-widget-" + alpha_vars.theme + "_widget_alert").length && (t = ".elementor-widget-" + alpha_vars.theme + "_widget_alert"),
                    e(this)
                        .closest(t)
                        .fadeOut(function () {
                            e(this).remove();
                        });
            });
        }),
        (theme.accordion = function (t) {
            theme.$body.on("click", t, function (t) {
                var n = e(this),
                    s = n.closest(".card"),
                    a = n.closest(".accordion"),
                    o = n.attr("href");
                (s = "#" == o ? s.children(".card-body") : s.find("#" == o[0] ? n.attr("href") : "#" + n.attr("href"))).length &&
                    (t.preventDefault(),
                    a.find(".collapsing").length ||
                        a.find(".expanding").length ||
                        (s.hasClass("expanded")
                            ? a.hasClass("radio-type") || i(s)
                            : s.hasClass("collapsed") &&
                              (a.find(".expanded").length > 0
                                  ? theme.isIE
                                      ? i(a.find(".expanded"), function () {
                                            i(s);
                                        })
                                      : (i(a.find(".expanded")), i(s))
                                  : i(s))));
            });
            var i = function (e, i) {
                var n = e.closest(".card"),
                    s = n.find(t);
                e.hasClass("expanded")
                    ? (s.removeClass("collapse").addClass("expand"),
                      n.removeClass("collapse").addClass("expand"),
                      e.addClass("collapsing").slideUp(300, function () {
                          e.removeClass("expanded collapsing").addClass("collapsed"), i && i();
                      }))
                    : e.hasClass("collapsed") &&
                      (s.removeClass("expand").addClass("collapse"),
                      n.removeClass("expand").addClass("collapse"),
                      e.addClass("expanding").slideDown(300, function () {
                          e.removeClass("collapsed expanding").addClass("expanded"), i && i();
                      }));
            };
        }),
        (theme.tab = function (t) {
            theme.$body.on("click", t + " .nav-link", function (i) {
                var n = e(this);
                if (!n.closest(t).hasClass("loading")) {
                    var s,
                        a = "SPAN" == this.tagName ? n.data("href") : n.attr("href");
                    if ((s = "#" == a ? n.closest(".nav").siblings(".tab-content").children(".tab-pane").eq(n.parent().index()) : e(("#" == a.substring(0, 1) ? "" : "#") + a)).length) {
                        i.preventDefault();
                        var o = s.parent().children(".active");
                        !n.hasClass("active") &&
                            a &&
                            (n.parent().parent().find(".active").removeClass("active"),
                            n.addClass("active"),
                            theme.loadTemplate(s),
                            theme.slider(s.find(".slider-wrapper")),
                            o.removeClass("in active"),
                            s.addClass("active in"),
                            theme.refreshLayouts());
                    }
                }
            });
        }),
        (theme.playableVideo = function (t) {
            e(t + " .video-play").on("click", function (i) {
                var n = e(this).closest(t);
                n.hasClass("playing") ? n.removeClass("playing").addClass("paused").find("video")[0].pause() : n.removeClass("paused").addClass("playing").find("video")[0].play(), i.preventDefault();
            }),
                e(t + " video").on("ended", function () {
                    e(this).closest(".post-video").removeClass("playing");
                });
        }),
        (theme.appearAnimate = function (e) {
            var t = "string" == typeof e && e.indexOf("elementor-invisible") > 0 ? "elementor-invisible" : "appear-animate";
            theme.$(e).each(function () {
                var e = this;
                theme.appear(e, function () {
                    if (e.classList.contains(t) && !e.classList.contains("appear-animation-visible")) {
                        var i = theme.parseOptions(e.getAttribute("data-settings")),
                            n = 1e3;
                        e.classList.contains("animated-slow") ? (n = 2e3) : e.classList.contains("animated-fast") && (n = 750),
                            theme.call(function () {
                                (e.style["animation-duration"] = n + "ms"),
                                    (e.style["animation-delay"] = i._animation_delay + "ms"),
                                    (e.style["transition-property"] = "visibility, opacity"),
                                    (e.style["transition-duration"] = "0s"),
                                    (e.style["transition-delay"] = i._animation_delay + "ms");
                                var t = i.animation || i._animation || i._animation_name;
                                t && e.classList.add(t),
                                    e.classList.add("appear-animation-visible"),
                                    setTimeout(
                                        function () {
                                            (e.style["transition-property"] = ""),
                                                (e.style["transition-duration"] = ""),
                                                (e.style["transition-delay"] = ""),
                                                e.classList.add("animating"),
                                                setTimeout(function () {
                                                    e.classList.add("animated-done");
                                                }, n);
                                        },
                                        i._animation_delay ? i._animation_delay + 500 : 500
                                    );
                            });
                    }
                });
            }),
                "object" == typeof elementorFrontend && theme.$window.trigger("resize.waypoints");
        });
    var n,
        s,
        a,
        o,
        l,
        r,
        d = { youtube: "youtube.com", vimeo: "vimeo.com/", gmaps: "//maps.google.", hosted: "" };
    (theme.initPopups = function () {
        function t(t) {
            var i = e(t.target);
            i.closest(".mfp-gallery").length || (i.closest(".mfp-content").length && !i.hasClass("mfp-content")) || e.magnificPopup.instance.close();
        }
        theme.$body.on("click", ".btn-video-iframe", function (t) {
            t.preventDefault(), theme.popup({ items: { src: '<video src="' + d[e(this).data("video-source")] + e(this).attr("href") + '" autoplay loop controls>', type: "inline" }, mainClass: "mfp-video-popup" }, "video");
        }),
            theme.$body.on("mousedown", ".mfp-wrap", t),
            "ontouchstart" in document && document.body.addEventListener("touchstart", t, { passive: !0 }),
            e("body > .popup").each(function (t) {
                var i = e(this);
                i.attr("data-popup-options") &&
                    (function (t) {
                        var i = theme.parseOptions(t.attr("data-popup-options"));
                        setTimeout(function () {
                            theme.getCookie("hideNewsletterPopup") ||
                                t.imagesLoaded(function () {
                                    theme.popup(
                                        {
                                            mainClass: "mfp-fade mfp-alpha mfp-alpha-" + i.popup_id,
                                            items: { src: t.get(0) },
                                            callbacks: {
                                                open: function () {
                                                    this.content.css({ "animation-duration": i.popup_duration, "animation-timing-function": "linear" }),
                                                        this.content.addClass(i.popup_animation + " animated"),
                                                        e("#alpha-popup-" + i.popup_id).css("display", "");
                                                },
                                            },
                                        },
                                        "firstpopup"
                                    );
                                });
                        }, 1e3 * i.popup_delay);
                    })(i);
            }),
            theme.$body.on("click", ".show-popup", function (t) {
                t.preventDefault();
                var i = -1;
                for (var n of this.classList) n && n.startsWith("popup-id-") && (i = n.substr(9));
                theme.popup(
                    {
                        mainClass: "mfp-alpha mfp-alpha-" + i,
                        ajax: { settings: { data: { action: "alpha_print_popup", nonce: alpha_vars.nonce, popup_id: i } } },
                        callbacks: {
                            afterChange: function () {
                                this.container.html('<div class="mfp-content"></div><div class="mfp-preloader"><div class="popup-template"><div class="d-loading"><i></i></div></div></div>'),
                                    (this.contentContainer = this.container.children(".mfp-content")),
                                    (this.preloader = !1);
                            },
                            beforeClose: function () {
                                this.container.empty();
                            },
                            ajaxContentAdded: function () {
                                var t = this,
                                    n = this.container.find(".popup"),
                                    s = JSON.parse(n.attr("data-popup-options"));
                                t.contentContainer.next(".mfp-preloader").css("max-width", n.css("max-width")),
                                    setTimeout(function () {
                                        t.contentContainer.next(".mfp-preloader").remove();
                                    }, 1e4),
                                    this.container.css({ "animation-duration": s.popup_duration, "animation-timing-function": "linear" }),
                                    this.container.addClass(s.popup_animation + " animated"),
                                    e("#alpha-popup-" + i).css("display", "");
                            },
                        },
                    },
                    "popup_template"
                );
            });
    }),
        (theme.initScrollTopButton = function () {
            var t = theme.byId("scroll-top");
            if (t) {
                function i() {
                    if (window.pageYOffset > 200) {
                        t.classList.add("show");
                        var i = e(document).height(),
                            n = e(window).height(),
                            s = (e(window).scrollTop() / (i - n)) * 214;
                        e("#progress-indicator").length > 0 && e("#progress-indicator").css("stroke-dasharray", s + ", 400");
                    } else t.classList.remove("show");
                }
                theme.$body.on("click", "#scroll-top", function (e) {
                    theme.scrollTo(0), e.preventDefault();
                }),
                    theme.call(i, 500),
                    window.addEventListener("scroll", i, { passive: !0 });
            }
        }),
        (theme.initScrollTo = function () {
            theme.scrollTo(theme.hash),
                "object" == typeof elementorFrontend && elementorFrontend.utils.anchors.setSettings("scrollDuration", 0),
                theme.$body.on("click", ".scroll-to", function (t) {
                    var i = e(this)
                        .attr("href")
                        .replace(location.origin + location.pathname, "");
                    i.startsWith("#") && i.length > 1 && (t.preventDefault(), theme.scrollTo(i));
                });
        }),
        (theme.initContactForms = function () {
            e('.wpcf7-form [aria-required="true"]').prop("required", !0);
        }),
        (theme.initSearchForm = function () {
            var t = e(".search-wrapper");
            if (
                (theme.$body.on("click", ".hs-toggle .search-toggle", function (i) {
                    (t = e(this).closest(".hs-toggle")),
                        theme.preventDefault(i),
                        t.toggleClass("show"),
                        theme.requestTimeout(function () {
                            t.find("input[type=search]").focus();
                        }, 300);
                }),
                "ontouchstart" in document
                    ? (t.find(".search-toggle").on("click", function (i) {
                          (t = e(this).closest(".hs-toggle")).toggleClass("show");
                      }),
                      theme.$body.on("click", function (i) {
                          (t = e(this).closest(".hs-toggle")).removeClass("show");
                      }),
                      t.on("click", function (e) {
                          theme.preventDefault(e), e.stopPropagation();
                      }))
                    : t.hasClass("hs-dropdown") &&
                      t
                          .find(".form-control")
                          .on("focusin", function (i) {
                              (t = e(this).closest(".hs-toggle")).addClass("show");
                          })
                          .on("focusout", function (i) {
                              (t = e(this).closest(".hs-toggle")).removeClass("show");
                          }),
                t.hasClass("hs-fullscreen") && t.length)
            ) {
                var i = e("header").height(),
                    n = t.find(".search-form");
                t.find(".search-form-wrapper").css("min-height", i + 60),
                    t.find(".scrollable").css("max-height", "calc(100vh - " + (n.offset().top + n.height() + 200) + "px)"),
                    t.on("click touchstart", ".search-toggle", function (t) {
                        var i = window.innerWidth - document.body.clientWidth;
                        e("body").css("overflow", "hidden"), e("body").css("margin-right", i + "px"), t.preventDefault();
                    });
            }
            t.hasClass("hs-overlap") &&
                t.on("click", ".hs-close", function (t) {
                    t.preventDefault(), e(this).closest(".search-wrapper").removeClass("show");
                }),
                e(window).on("resize", function () {
                    e("body").css("overflow", ""), e("body").css("margin-right", "");
                });
        }),
        (theme.initElementor = function () {
            "undefined" != typeof elementorFrontend &&
                elementorFrontend.waypoint(e(".elementor-counter-number"), function () {
                    var t = e(this),
                        i = t.data(),
                        n = i.toValue.toString().match(/\.(.*)/);
                    n && (i.rounding = n[1].length), t.numerator(i);
                });
        }),
        (theme.initVendorCompatibility = function () {
            theme.$body.on("keydown", ".store-search-input", function (t) {
                13 == t.keyCode &&
                    setTimeout(function () {
                        e("#dokan-store-listing-filter-form-wrap #apply-filter-btn").trigger("click");
                    }, 150);
            }),
                theme.$body
                    .on("click", ".wcmp-report-abouse-wrapper .close", function (t) {
                        e(".wcmp-report-abouse-wrapper #report_abuse_form_custom").fadeOut(100);
                    })
                    .on("click", ".wcmp-report-abouse-wrapper #report_abuse", function (t) {
                        e(".wcmp-report-abouse-wrapper #report_abuse_form_custom").fadeIn(100);
                    }),
                e("select#rating").prev("p.stars").prevAll("p.stars").remove(),
                theme.$body.on("click", ".goto_more_offer_tab", function (t) {
                    t.preventDefault(),
                        e(".singleproductmultivendor_tab").hasClass("active") || e(".singleproductmultivendor_tab a, #tab_singleproductmultivendor").trigger("click"),
                        e(".woocommerce-tabs").length > 0 && e("html, body").animate({ scrollTop: e(".woocommerce-tabs").offset().top - 120 }, 1500);
                });
        }),
        (theme.initFloatingElements = function (t) {
            if (e.fn.parallax) {
                (t || e('[data-plugin="floating"]')).each(function (t) {
                    var i = e(this);
                    i.data("parallax") && (i.parallax("disable"), i.removeData("parallax"), i.removeData("options")),
                        i.hasClass("elementor-element")
                            ? i.children(".elementor-widget-container, .elementor-container").addClass("layer").attr("data-depth", i.attr("data-floating-depth"))
                            : i.children(".layer").attr("data-depth", i.attr("data-floating-depth")),
                        i.parallax(i.data("options"));
                });
            }
        }),
        (theme.initAdvancedMotions = function (t, i) {
            if (!theme.isMobile && "undefined" != typeof skrollr) {
                var n = "";
                (n = t || e('[data-plugin="skrollr"]')).removeAttr("data-bottom-top data-top data-center-top").css({}),
                    skrollr.get() && skrollr.get().destroy(),
                    "destroy" != i
                        ? (n.each(function (t) {
                              var i = e(this),
                                  n = {},
                                  s = [];
                              e(this).attr("data-options") && ((n = JSON.parse(e(this).attr("data-options"))), (s = Object.keys(n))),
                                  "object" == typeof n &&
                                      (s = Object.keys(n)).length &&
                                      s.forEach(function (e) {
                                          i.attr(e, n[e]);
                                      });
                          }),
                          n.length && skrollr.init({ forceHeight: !1, smoothScrolling: !0 }))
                        : n.removeAttr("data-plugin data-options");
            }
        }),
        (theme.initVideoPlayer = function (t) {
            void 0 === t && (t = ".btn-video-player"),
                theme.$(t).on("click", function (t) {
                    var i = e(this).closest(".video-banner");
                    if (i.length && i.find("video").length) {
                        var n = i.find("video");
                        (n = n[0]), i.hasClass("playing") ? (i.removeClass("playing").addClass("paused"), n.pause()) : (i.removeClass("paused").addClass("playing"), n.play());
                    }
                    i.find(".parallax-background").length > 0 && i.find(".parallax-background").css("z-index", "-1"), t.preventDefault();
                }),
                theme
                    .$(t)
                    .closest(".video-banner")
                    .find("video")
                    .on("playing", function () {
                        e(this).closest(".video-banner").removeClass("paused").addClass("playing");
                    }),
                theme
                    .$(t)
                    .closest(".video-banner")
                    .find("video")
                    .on("ended", function () {
                        e(this).closest(".video-banner").removeClass("playing").addClass("paused");
                    });
        }),
        (theme.menu = (function () {
            function t(t, i) {
                var n = e(".mobile-menu-wrapper .mobile-menu-container");
                function s() {
                    theme.liveSearch && theme.liveSearch("", e(".mobile-menu-wrapper .search-wrapper")), theme.menu.addToggleButtons(".mobile-menu li");
                }
                if ((theme.$body.addClass("mmenu-active"), t.preventDefault(), n.find(".mobile-menu").length)) s(), "function" == typeof i && i();
                else {
                    var a = theme.getCache(a);
                    a.mobileMenu && a.mobileMenuLastTime && alpha_vars.menu_last_time && parseInt(a.mobileMenuLastTime) >= parseInt(alpha_vars.menu_last_time)
                        ? (n.append(a.mobileMenu), s(), theme.setCurrentMenuItems(".mobile-menu-wrapper"))
                        : (theme.doLoading(n),
                          e.post(alpha_vars.ajax_url, { action: "alpha_load_mobile_menu", nonce: alpha_vars.nonce, load_mobile_menu: !0 }, function (e) {
                              e && (e = e.replace(/(class=".*)current_page_parent\s*(.*")/, "$1$2")),
                                  n.css("height", ""),
                                  theme.endLoading(n),
                                  n.append(e),
                                  s(),
                                  theme.setCurrentMenuItems(".mobile-menu-wrapper"),
                                  (a.mobileMenuLastTime = alpha_vars.menu_last_time),
                                  (a.mobileMenu = e),
                                  theme.setCache(a),
                                  "function" == typeof i && i();
                          }));
                }
            }
            function i(e) {
                e.preventDefault(), theme.$body.removeClass("mmenu-active");
            }
            return {
                init: function () {
                    this.initMenu(), this.initFilterMenu(), this.initCollapsibleWidget(), this.initCollapsibleWidgetToggle();
                },
                initMenu: function (n) {
                    void 0 === n && (n = ""),
                        theme.$body
                            .on("click", n + " .menu-item .nolink", theme.preventDefault)
                            .on("click", ".mobile-menu-toggle", t)
                            .on("click", ".mobile-menu-overlay", i)
                            .on("click", ".mobile-menu-close", i)
                            .on("click", ".mobile-item-categories.show-categories-menu", function (i) {
                                t(i, function () {
                                    e('.mobile-menu-container .nav a[href="#categories"]').trigger("click");
                                });
                            }),
                        window.addEventListener("resize", i, { passive: !0 }),
                        this.addToggleButtons(n + " .collapsible-menu li"),
                        theme.$body.on("click", ".dropdown-menu-toggle", theme.preventDefault),
                        (function () {
                            function t() {
                                e("nav .menu.horizontal-menu .megamenu").each(function () {
                                    var t = e(this),
                                        i = t.offset().left - parseInt(t.css("margin-left")),
                                        n = t.outerWidth(),
                                        s = i + n - (window.innerWidth - 20);
                                    t.hasClass("full-megamenu") && 0 == t.closest(".container-fluid").length ? t.css("margin-left", (e(window).width() - n) / 2 - i + "px") : s > 0 && i > 20 && t.css("margin-left", -s + "px"),
                                        t.parent().addClass("loaded");
                                });
                            }
                            if (e(".toggle-menu.dropdown").length) {
                                var i = e(".toggle-menu.dropdown .vertical-menu"),
                                    n = i.length > 0 && i.offset().top,
                                    s = n;
                                e(".vertical-menu .menu-item-has-children").on("mouseenter", function (t) {
                                    var i = e(this);
                                    if (i.children(".megamenu").length) {
                                        var a = i.children(".megamenu"),
                                            o = a.offset().top - parseInt(a.css("margin-top")),
                                            l = a.outerHeight();
                                        if (void 0 !== (s = window.pageYOffset > n ? i.closest(".menu").offset().top : n) && o >= s) {
                                            var r = o + l - window.innerHeight - window.pageYOffset;
                                            r <= 0 ? a.css("margin-top", "0px") : r < o - s ? a.css("margin-top", -(r + 5) + "px") : a.css("margin-top", -(o - s) + "px");
                                        }
                                    }
                                });
                            }
                            t(), theme.$window.on("resize recalc_menus", t);
                        })(),
                        alpha_vars.lazyload &&
                            theme.call(function () {
                                e(".megamenu [data-lazy]").each(function () {
                                    theme._lazyload_force(this);
                                });
                            }),
                        e("nav .menu ul:not(.megamenu)").parent().addClass("loaded");
                },
                addToggleButtons: function (t) {
                    theme.$(t).each(function () {
                        var t = e(this);
                        t.hasClass("menu-item-has-children") &&
                            !t.children("a").children(".toggle-btn").length &&
                            t.children("ul").text().trim() &&
                            t.children("a").each(function () {
                                var e = document.createElement("span");
                                (e.className = "toggle-btn"), this.append(e);
                            });
                    });
                },
                initFilterMenu: function () {
                    theme.$body.on("click", ".with-ul > a i, .menu .toggle-btn, .mobile-menu .toggle-btn", function (t) {
                        var i = e(this),
                            n = i.parent().siblings(":not(.count)");
                        n.length > 1 ? i.parent().toggleClass("show").next(":not(.count)").slideToggle(300) : n.length > 0 && n.slideToggle(300).parent().toggleClass("show"),
                            setTimeout(function () {
                                i.closest(".sticky-sidebar").trigger("recalc.pin");
                            }, 320),
                            t.preventDefault();
                    });
                },
                initCollapsibleWidgetToggle: function (t) {
                    e(".widget .product-categories li")
                        .add(".sidebar .widget.widget_categories li")
                        .add(".widget .product-brands li")
                        .add(".store-cat-stack-dokan li")
                        .each(function () {
                            if (this.lastElementChild && "UL" === this.lastElementChild.tagName) {
                                var e = document.createElement("i");
                                (e.className = alpha_vars.theme_icon_prefix + "-icon-angle-down-solid"), this.classList.add("with-ul"), this.classList.add("cat-item"), this.firstElementChild.appendChild(e);
                            }
                        }),
                        theme.$(void 0 === t ? ".sidebar .widget-collapsible .widget-title" : t).each(function () {
                            var t = e(this);
                            if (!(t.closest(".top-filter-widgets").length || t.closest(".toolbox-horizontal").length || t.siblings(".slider-wrapper").length || t.children(".toggle-btn").length)) {
                                var i = document.createElement("span");
                                (i.className = "toggle-btn"), this.appendChild(i);
                            }
                        });
                },
                initCollapsibleWidget: function () {
                    theme.$body.on("click", ".sidebar .widget-collapsible .widget-title", function (t) {
                        var i = e(t.currentTarget);
                        if (!(i.closest(".top-filter-widgets").length || i.closest(".toolbox-horizontal").length || i.siblings(".slider-wrapper").length || i.hasClass("sliding"))) {
                            var n = i.siblings("*:not(script):not(style)");
                            i.hasClass("collapsed") || n.css("display", "block"),
                                i.addClass("sliding"),
                                n.slideToggle(300, function () {
                                    i.removeClass("sliding"), theme.$window.trigger("update_lazyload"), e(".sticky-sidebar").trigger("recalc.pin");
                                }),
                                i.toggleClass("collapsed");
                        }
                    });
                },
            };
        })()),
        (theme.popup = function (t, i) {
            var n = e.magnificPopup.instance;
            n.isOpen
                ? n.content
                    ? setTimeout(function () {
                          theme.popup(t, i);
                      }, 5e3)
                    : e.magnificPopup.close()
                : e.magnificPopup.open(e.extend(!0, {}, theme.defaults.popup, i ? theme.defaults.popupPresets[i] : {}, t));
        }),
        (theme.minipopup =
            ((s = []),
            (a = []),
            (o = !1),
            (l = !1),
            (r = function () {
                if (!o) for (var e = 0; e < a.length; ++e) (a[e] -= 200) <= 0 && this.close(e--);
            }),
            {
                init: function () {
                    var t = document.createElement("div");
                    (t.className = "minipopup-area"), e(theme.byClass("page-wrapper")).append(t), (n = e(t)), (this.close = this.close.bind(this)), (r = r.bind(this));
                },
                open: function (t, i) {
                    var o,
                        d = this,
                        c = e.extend(!0, {}, theme.defaults.minipopup, t);
                    (o = e(c.content))
                        .find("img")
                        .on("load", function () {
                            setTimeout(function () {
                                o.addClass("show");
                            }, 300),
                                o.offset().top - window.pageYOffset < 0 && d.close(),
                                o.on("mouseenter", function () {
                                    d.pause();
                                }),
                                o.on("mouseleave", function (e) {
                                    d.resume();
                                }),
                                o[0].addEventListener(
                                    "touchstart",
                                    function (e) {
                                        d.pause(), e.stopPropagation();
                                    },
                                    { passive: !0 }
                                ),
                                theme.$body[0].addEventListener(
                                    "touchstart",
                                    function () {
                                        d.resume();
                                    },
                                    { passive: !0 }
                                ),
                                o.on("mousedown", function () {
                                    o.css("transform", "translateX(0) scale(0.96)");
                                }),
                                o.on("mousedown", "a", function (e) {
                                    e.stopPropagation();
                                }),
                                o.on("mouseup", function () {
                                    d.close(s.indexOf(o));
                                }),
                                o.on("mouseup", "a", function (e) {
                                    e.stopPropagation();
                                }),
                                s.push(o),
                                a.push(c.delay),
                                a.length > 1 || (l = setInterval(r, 200)),
                                i && i(o);
                        })
                        .on("error", function () {
                            o.remove();
                        }),
                        o.appendTo(n);
                },
                close: function (e) {
                    var t = this,
                        i = void 0 === e ? 0 : e,
                        n = s.splice(i, 1)[0];
                    n &&
                        (a.splice(i, 1)[0],
                        n.css("transform", "").removeClass("show"),
                        t.pause(),
                        setTimeout(function () {
                            var e = n.next();
                            e.length
                                ? e.animate({ "margin-bottom": -1 * n[0].offsetHeight - 20 }, 300, "easeOutQuint", function () {
                                      e.css("margin-bottom", ""), n.remove();
                                  })
                                : n.remove(),
                                t.resume();
                        }, 300),
                        s.length || clearTimeout(l));
                },
                pause: function () {
                    o = !0;
                },
                resume: function () {
                    o = !1;
                },
            })),
        (theme.initAccount = function () {
            theme.$body
                .on("click", ".header .account > a:not(.logout), .header .account > .links > a:not(.logout)", function (e) {
                    if (!this.classList.contains("logout")) {
                        e.preventDefault();
                        var t = this.classList.contains("register");
                        theme.popup(
                            {
                                mainClass: "mfp-login mfp-fade" + (this.classList.contains("offcanvas") ? " offcanvas-type" : ""),
                                callbacks: {
                                    afterChange: function () {
                                        this.container.html('<div class="mfp-content"></div><div class="mfp-preloader"><div class="login-popup"><div class="d-loading"><i></i></div></div></div>'),
                                            (this.contentContainer = this.container.children(".mfp-content")),
                                            (this.preloader = !1);
                                    },
                                    beforeClose: function () {
                                        this.container.empty();
                                    },
                                    ajaxContentAdded: function () {
                                        var e = this;
                                        t && this.wrap.find('[href="signup"]').trigger("click"),
                                            setTimeout(function () {
                                                e.contentContainer.next(".mfp-preloader").remove();
                                            }, 200);
                                    },
                                },
                            },
                            "login"
                        );
                    }
                })
                .on("submit", "#customer_login form", function (t) {
                    var i = e(this),
                        n = i[0].classList.contains("login");
                       
                    i.find("p.submit-status").show().text('Please wait... ').addClass("loading"),
                        i.find("button[type=submit]").attr("disabled", "disabled"),
                        e.ajax({
                            type: "POST",
                            dataType: "json",
                            url: alpha_vars.ajax_url,
                            data: i.serialize() + "&action=alpha_account_" + (n ? "signin" : "signup") + "_validate",
                            success: function (e) {
                                i.find("p.submit-status").html(e.message.replace("/<script.*?/script>/s", "")).removeClass("loading"), i.find("button[type=submit]").removeAttr("disabled"), !0 === e.loggedin && location.reload();
                            },
                        }),
                        t.preventDefault();
                });
        }),
        (theme.initKeyDown = function () {
            var t = e(".hs-fullscreen"),
                i = e(".offcanvas-type");
            (t.length || i.length) &&
                document.addEventListener("keydown", function (e) {
                    "Escape" == e.key && (i.hasClass("opened") && i.removeClass("opened"), t.length && t.find(".hs-close").trigger("click"));
                });
        }),
        (theme.slider = (function () {
            function t(e, t) {
                return this.init(e, t);
            }
            function i() {
                var t = e(this.slider.wrapperEl),
                    i = this.slider;
                t.trigger("initialized.slider", i),
                    t.find(".slider-slide:not(.slider-slide-active) .appear-animate").removeClass("appear-animate"),
                    t
                        .find("video")
                        .removeAttr("style")
                        .on("ended", function () {
                            if (e(this).closest(".slider-slide").hasClass("slider-slide-active"))
                                if (!0 === i.params.autoplay.enabled) {
                                    if (i.params.loop && i.slides.length === i.activeIndex) {
                                        this.loop = !0;
                                        try {
                                            this.play();
                                        } catch (e) {}
                                    }
                                    i.slideNext(), i.autoplay.start();
                                } else {
                                    this.loop = !0;
                                    try {
                                        this.play();
                                    } catch (e) {}
                                }
                        }),
                    a.call(this);
            }
            function n() {
                e(window).trigger("appear.check");
                var t = e(this.slider.wrapperEl),
                    i = this.slider,
                    n = t.find(".slider-slide-active video");
                (t.find(".slider-slide:not(.slider-slide-active) video").each(function () {
                    this.paused || i.autoplay.start(), this.pause(), (this.currentTime = 0);
                }),
                n.length) &&
                    ((i = t.data("slider")) && i.params && i.params.autoplay.enabled && i.autoplay.stop(),
                    n.each(function () {
                        try {
                            this.paused && this.play();
                        } catch (e) {}
                    }));
                a.call(this);
            }
            function s() {
                var t = this,
                    i = e(this.slider.wrapperEl);
                i.find(".slider-slide-active .slide-animate").each(function () {
                    var i,
                        n = e(this),
                        s = n.data("settings"),
                        a = s._animation_delay ? s._animation_delay : 0,
                        o = s._animation_name;
                    (i = n.hasClass("animated-slow") ? 2e3 : n.hasClass("animated-fast") ? 750 : 1e3), n.css("animation-duration", i + "ms"), (i = i || 750);
                    var l = theme.requestTimeout(function () {
                        n.addClass(o), n.addClass("show-content"), t.timers.splice(t.timers.indexOf(l), 1);
                    }, a || 0);
                });
                var n = e(this.slider.slides)
                    .slice(this.slider.activeIndex, this.slider.activeIndex + this.slider.params.slidesPerView)
                    .find(".slide-animate");
                i.find(".slider-slide .slide-animate").each(function () {
                    if (!(n.index(e(this)) >= 0)) {
                        var i,
                            s = e(this),
                            a = s.data("settings"),
                            o = a._animation_delay ? a._animation_delay : 0;
                        (i = s.hasClass("animated-slow") ? 2e3 : s.hasClass("animated-fast") ? 750 : 1e3), s.css("animation-duration", i + "ms"), (i = i || 750);
                        var l = theme.requestTimeout(function () {
                            s.removeClass(a._animation_name + " animated"), t.timers.splice(t.timers.indexOf(l), 1);
                        }, o + i);
                    }
                });
            }
            function a() {
                e.fn.lazyload &&
                    e(this.slider.wrapperEl)
                        .find("[data-lazy]")
                        .filter(function () {
                            return !e(this).data("_lazyload_init");
                        })
                        .data("_lazyload_init", 1)
                        .each(function () {
                            e(this).lazyload(theme.defaults.lazyload);
                        });
            }
            function o() {
                e(this.slider.wrapperEl)
                    .find(".slider-slide-active .slide-animate")
                    .each(function () {
                        e(this).addClass("show-content").css({ "animation-name": "", "animation-duration": "", "animation-delay": "" });
                    });
            }
            function l() {
                var t = this,
                    i = e(this.slider.wrapperEl),
                    n = e(this.slider.slides).slice(this.slider.activeIndex, this.slider.activeIndex + this.slider.params.slidesPerView);
                (t.translateFlag = 1),
                    (t.prev = t.next),
                    i.find(".slider-slide .slide-animate").each(function () {
                        var t = e(this),
                            i = t.closest(".slider-slide"),
                            s = t.data("settings");
                        n.index(i) < 0 && s && t.removeClass("animated");
                    });
            }
            function r() {
                var t = this,
                    i = e(this.slider.wrapperEl);
                if (1 == t.translateFlag) {
                    i.find(".slider-slide .show-content").removeClass("show-content");
                    var n = e(this.slider.slides)
                        .slice(this.slider.activeIndex, this.slider.activeIndex + this.slider.params.slidesPerView)
                        .find(".slide-animate");
                    if (((t.next = this.slider.activeIndex), t.prev != t.next)) {
                        if ((i.find(".slider-slide .show-content").removeClass("show-content"), i.hasClass("animation-slider"))) {
                            for (var s = 0; s < t.timers.length; s++) theme.deleteTimeout(t.timers[s]);
                            t.timers = [];
                        }
                        n.each(function () {
                            var i,
                                n = e(this),
                                s = n.data("settings"),
                                a = s._animation_delay ? s._animation_delay : 0,
                                o = s._animation_name;
                            if (!n.hasClass("animated")) {
                                if (
                                    ((i = n.hasClass("animated-slow") ? 2e3 : n.hasClass("animated-fast") ? 750 : 1e3),
                                    n.css({ "animation-duration": i + "ms", "animation-delay": a + "ms", "transition-property": "visibility, opacity", "transition-duration": i + "ms", "transition-delay": a + "ms" }).addClass(o),
                                    n.hasClass("maskLeft"))
                                ) {
                                    n.css("width", "fit-content");
                                    var l = n.width();
                                    n.css("width", 0)
                                        .css("transition", "width " + (i || 750) + "ms linear " + (a || "0s"))
                                        .css("width", l);
                                }
                                (i = i || 750), n.addClass("show-content");
                                var r = theme.requestTimeout(
                                    function () {
                                        n.css("transition-property", ""), n.css("transition-delay", ""), n.css("transition-duration", ""), t.timers.splice(t.timers.indexOf(r), 1);
                                    },
                                    a ? a + 200 : 200
                                );
                                t.timers.push(r);
                            }
                        }),
                            i.find(".slider-slide .slide-animate").each(function () {
                                var t = e(this),
                                    i = t.data("settings");
                                n.index(e(this)) < 0 && i && t.removeClass(i._animation_name + " animated appear-animation-visible elementor-invisible appear-animate");
                            }),
                            this.slider.activeIndex == this.slider.params.slidesPerView - 1 && this.slider.emit("theme.from.begin");
                    } else n.addClass("show-content");
                    t.translateFlag = 0;
                }
            }
            function d() {
                if (!this.slider.params.loop) return;
                const t = this.slider.params.slidesPerView;
                (this.slider.activeIndex > t - 1
                    ? e(this.slider.slides)
                          .slice(t + 1, 2 * t)
                          .find(".slide-animate")
                    : e(this.slider.slides)
                          .slice(-t - 1, -1)
                          .find(".slide-animate")
                ).each(function () {
                    var t = e(this);
                    t.data("settings") && !t.hasClass("show-content") && t.addClass("show-content animated");
                });
            }
            return (
                (t.prototype.init = function (t, c) {
                    (this.timers = []), (this.translateFlag = 0);
                    var h = e.extend(!0, {}, theme.defaults.slider);
                    t
                        .attr("class")
                        .split(" ")
                        .forEach(function (t) {
                            theme.defaults.sliderPresets[t] && e.extend(!0, h, theme.defaults.sliderPresets[t]);
                        }),
                        e.extend(!0, h, theme.parseOptions(t.attr("data-slider-options")), c),
                        t.find("video").each(function () {
                            this.loop = !1;
                        });
                    var p = t.children(),
                        m = p.length;
                    m && (p.filter(".row").length ? (p.wrap('<div class="slider-slide"></div>'), (p = t.children())) : p.addClass("slider-slide"));
                    var u = t.attr("class"),
                        f = /gutter\-\w\w|cols\-\d|cols\-\w\w-\d/g,
                        g = u.match(f) || "";
                    g && (g.push("row"), t.data("slider-layout", g), t.attr("class", u.replace(f, "").replace(/\s+/, " ")).removeClass("row"));
                    var v = [];
                    if (h.breakpoints) {
                        var w = ["d-none", "d-sm-none", "d-md-none", "d-lg-none", "d-xl-none"],
                            b = ["d-block", "d-sm-block", "d-md-block", "d-lg-block", "d-xl-block"],
                            y = 0;
                        for (var C in h.breakpoints) m <= h.breakpoints[C].slidesPerView ? v.push(w[y]) : v.length && v.push(b[y]), ++y;
                    }
                    v = " " + v.join(" ");
                    var x = "";
                    (!h.dotsContainer && h.pagination && (x += '<div class="slider-pagination' + v + '"></div>'),
                    h.navigation && (x += '<button class="slider-button slider-button-prev' + v + '" aria-label="Prev"></button><button class="slider-button slider-button-next' + v + '" aria-label="Next"></button>'),
                    t.siblings(".slider-button,.slider-pagination").remove(),
                    t
                        .parent()
                        .addClass("slider-container" + (h.statusClass ? " " + h.statusClass : "") + (t.attr("data-slider-status") ? " " + t.attr("data-slider-status") : ""))
                        .parent()
                        .addClass("slider-relative"),
                    t.after(x),
                    !h.dotsContainer && h.pagination && (h.pagination = { clickable: !0, el: t.siblings(".slider-pagination")[0], bulletClass: "slider-pagination-bullet", bulletActiveClass: "active", modifierClass: "slider-pagination-" }),
                    h.navigation && (h.navigation = { prevEl: t.siblings(".slider-button-prev")[0], nextEl: t.siblings(".slider-button-next")[0], hideOnClick: !0, disabledClass: "disabled", hiddenClass: "slider-button-hidden" }),
                    t.hasClass("product-thumbs")) &&
                        (t.parent().parent().hasClass("pg-vertical") && ((h.direction = "vertical"), (h.breakpoints = { 0: { slidesPerView: 4, direction: "horizontal" }, 992: { slidesPerView: "auto", direction: "vertical" } })),
                        t.closest(".container-fluid").length && (h.breakpoints || (h.breakpoints = {})));
                    if (t.hasClass("product-single-carousel")) {
                        var _ = t.closest(".product-gallery").find(".product-thumbs");
                        h.thumbs.swiper = _.data("slider");
                    }
                    if (((h.legacy = !1), "undefined" != typeof Swiper)) {
                        if (
                            ((this.slider = new (theme.Swiper || Swiper)(t[0].parentElement, h)),
                            i.call(this),
                            this.slider.on("resize", a.bind(this)),
                            this.slider.on("transitionEnd", n.bind(this)),
                            h.onInitialized && h.onInitialized.call(this.slider),
                            t.hasClass("animation-slider") &&
                                (s.call(this),
                                this.slider.on("resize", o.bind(this)),
                                this.slider.on("transitionStart", l.bind(this)),
                                this.slider.on("transitionEnd", r.bind(this)),
                                this.slider.on("fromEdge theme.from.begin", d.bind(this))),
                            h.dotsContainer && "preview" != h.dotsContainer)
                        ) {
                            var k = this.slider;
                            theme.$body.on("click", h.dotsContainer + " button", function () {
                                k.slideTo(e(this).index());
                            }),
                                this.slider.on("transitionStart", function () {
                                    e(h.dotsContainer).children().removeClass("active").eq(this.realIndex).addClass("active");
                                });
                        }
                        t.trigger("initialize.slider", [this.slider]), t.data("slider", this.slider);
                    }
                }),
                function (i, n, s) {
                    theme.$(i).each(function () {
                        var a = e(this);
                        if (!((theme.disableMobileSlider && (a.hasClass("products") || a.hasClass("posts"))) || a.data("slider"))) {
                            var o = a.find(".elementor-invisible, .appear-animate, .animated").filter(":not(.elementor-column)");
                            o.length &&
                                (a.addClass("animation-slider"),
                                o.addClass("slide-animate").each(function () {
                                    var t = e(this),
                                        i = t.data("settings");
                                    if (i) {
                                        var n = { _animation_name: i._animation ? i._animation : i.animation, _animation_delay: Number(i._animation_delay) };
                                        t.removeClass("appear-animate").data("settings", n).attr("data-settings", JSON.stringify(n));
                                    }
                                }));
                            var l = function () {
                                if (".slider-wrapper" == i) {
                                    var e = a.closest(".tab-pane");
                                    if (e.length && !e.hasClass("active") && e.closest(".elementor-widget-" + alpha_vars.theme + "_widget_products_tab").length) return;
                                }
                                new t(a, n);
                            };
                            s ? new l() : theme.call(l);
                        }
                    });
                }
            );
        })()),
        (theme.initSlider = function (e) {
            (theme.disableMobileSlider = theme.$body.hasClass("alpha-disable-mobile-slider") && "ontouchstart" in document && theme.$window.width() < 1200), theme.slider(e);
        }),
        (theme.showEditPageTooltip = function () {
            e.fn.tooltip &&
                (e(".alpha-edit-link").each(function () {
                    var t = e(this),
                        i = t.data("title");
                    t.next(".alpha-block")
                        .addClass("alpha-has-edit-link")
                        .tooltip({
                            html: !0,
                            template: '<div class="tooltip alpha-tooltip-wrap" role="tooltip"><div class="arrow"></div><div class="tooltip-inner alpha-tooltip"></div></div>',
                            trigger: "manual",
                            title: '<a href="' + t.data("link") + '" target="_blank">' + i + "</a>",
                            delay: 300,
                        });
                    var n = t.next(".alpha-block").data("bs.tooltip");
                    n &&
                        n.element &&
                        (e(n.element).on("mouseenter.bs.tooltip", function (e) {
                            n._enter(e);
                        }),
                        e(n.element).on("mouseleave.bs.tooltip", function (e) {
                            n._leave(e);
                        }));
                }),
                theme.$body.on("mouseenter mouseleave", '.tooltip[role="tooltip"]', function (t) {
                    var i = e('.alpha-block[aria-describedby="' + e(this).attr("id") + '"]');
                    if (i.length && i.data("bs.tooltip")) {
                        var n = "mouseenter" == t.type ? "_enter" : "_leave";
                        i.data("bs.tooltip")[n](!1, i.data("bs.tooltip"));
                    }
                }));
        }),
        (theme.liveSearch = function (t, i) {
            var n = "",
                s = "",
                a = { requesting: !1, open: !1, prevResults: "" };
            e.fn.devbridgeAutocomplete &&
                (i = void 0 === i ? e(".search-wrapper") : i).each(function () {
                    var t = e(this),
                        i = t.hasClass("hs-fullscreen"),
                        o = t.find(".search-results"),
                        l = t.find(".search-container"),
                        r = i ? o : t.find(".live-search-list"),
                        d = t.find(".cat"),
                        c = t.find('input[name="post_type"]').val(),
                        h = alpha_vars.ajax_url + "?action=alpha_ajax_search&nonce=" + alpha_vars.nonce + (c ? "&post_type=" + c : "");
                    if (i) {
                        function p() {
                            !0 === a.requesting && (s.abort(), (a.requesting = !1));
                        }
                        function m(e = !1) {
                            l.css({ "max-height": e ? "20px" : "" }),
                                setTimeout(function () {
                                    t.closest(".search-wrapper").removeClass("results-shown");
                                }, 400),
                                (a.prevResults = ""),
                                (a.open = !1);
                        }
                        t.find("input.form-control").on("keyup", function (i) {
                            -1 == [16, 91, 32, 37, 39, 17].indexOf(i.keyCode) &&
                                (clearTimeout(n),
                                (n = setTimeout(function () {
                                    a.requesting ||
                                        (function () {
                                            var i = t.find('input[type="search"]').val();
                                            if (0 == i.length || i.length < 3) return p(), void m();
                                            (s = e.ajax({
                                                type: "GET",
                                                url: h,
                                                data: { query: i, posts_per_page: 21, cat: d.length ? d.val() : 0, is_full_screen: !0 },
                                                success: function (i) {
                                                    (a.requesting = !1),
                                                        i.suggestions || (m(!0), r.html(alpha_vars.search_result)),
                                                        i.suggestions &&
                                                            i.suggestions !== a.prevResults &&
                                                            (r.html(i.suggestions),
                                                            t.imagesLoaded(function () {
                                                                l.css({ "max-height": parseInt(o.outerHeight()) + "px" }),
                                                                    setTimeout(function () {
                                                                        t.closest(".search-wrapper").addClass("results-shown");
                                                                    }, 200),
                                                                    window.innerWidth > 992 &&
                                                                        (r.find(".product, .post-wrap").css({ opacity: "0", transform: "translateY(25px)", transition: "none" }),
                                                                        setTimeout(function () {
                                                                            r.find(".product, .post-wrap").css({
                                                                                transition: "box-shadow 0.25s ease, opacity 0.55s cubic-bezier(0.2, 0.6, 0.4, 1), transform 0.55s cubic-bezier(0.2, 0.6, 0.4, 1)",
                                                                            });
                                                                        }, 50),
                                                                        r.find(".product, .post-wrap").each(function (t) {
                                                                            var i = e(this);
                                                                            setTimeout(function () {
                                                                                i.css({ opacity: "1", transform: "translateY(0)" });
                                                                            }, 50 + 60 * t);
                                                                        })),
                                                                    (a.open = !0),
                                                                    (a.prevResults = i.suggestions);
                                                            }));
                                                },
                                            })),
                                                (a.requesting = !0);
                                        })();
                                }, 400)));
                        }),
                            theme.$window.on("resize", function () {
                                t.find(".search-container").css({ "max-height": "" }), !0 === a.open && t.find(".search-container").css({ "max-height": parseInt(o.outerHeight()) + "px" });
                            }),
                            t.find(".close-overlay, .hs-close").on("click", function (i) {
                                i.preventDefault(), m(), p();
                                var n = t.closest(".search-wrapper").hasClass("results-shown") ? 800 : 400;
                                setTimeout(function () {
                                    t.find("input.form-control").val("");
                                }, n),
                                    e(this).closest(".search-wrapper").removeClass("show"),
                                    e("body").css("overflow", ""),
                                    e("body").css("margin-right", "");
                            });
                    } else if (
                        (t.find('input[type="search"]').devbridgeAutocomplete({
                            minChars: 3,
                            appendTo: r,
                            triggerSelectOnValidInput: !1,
                            serviceUrl: h,
                            onSearchStart: function () {
                                t.addClass("skeleton-body"),
                                    r
                                        .children()
                                        .eq(0)
                                        .html(alpha_vars.skeleton_screen ? '<div class="skel-pro-search"></div><div class="skel-pro-search"></div><div class="skel-pro-search"></div>' : '<div class="d-loading"><i></i></div>')
                                        .css({ position: "relative", display: "block" });
                            },
                            onSelect: function (e) {
                                -1 != e.id && (window.location.href = e.url);
                            },
                            onSearchComplete: function (e, t) {
                                t.length || r.children().eq(0).hide();
                            },
                            beforeRender: function (t) {
                                e(t).removeAttr("style");
                            },
                            formatResult: function (t, i) {
                                var n = "(" + e.Autocomplete.utils.escapeRegExChars(i) + ")",
                                    s = "";
                                return (
                                    t.img && (s += '<img class="search-image" src="' + t.img + '">'),
                                    (s += '<div class="search-info">'),
                                    (s += '<div class="search-name">' + t.value.replace(new RegExp(n, "gi"), "<strong>$1</strong>") + "</div>"),
                                    t.price && (s += '<span class="search-price">' + t.price + "</span>"),
                                    (s += "</div>")
                                );
                            },
                        }),
                        d.length)
                    ) {
                        var u = t.find('input[type="search"]').devbridgeAutocomplete();
                        d.on("change", function (e) {
                            d.val() && "0" != d.val() ? u.setOptions({ serviceUrl: h + "&cat=" + d.val() }) : u.setOptions({ serviceUrl: h }), u.hide(), u.onValueChange();
                        });
                    }
                });
        }),
        (theme.initOffcanvas = function () {
            theme.$window
                .on("offcanvas.opened", function () {
                    var t = window.innerWidth - document.body.clientWidth;
                    e("html").css("overflow", "hidden"), e("html").css("margin-right", t + "px"), e(".sticky-content.fixed").css("padding-right", t);
                })
                .on("offcanvas.closed", function () {
                    e("html").css("overflow", ""), e("html").css("margin-right", ""), e(".sticky-content.fixed").css("padding-right", "");
                });
        }),
        (theme.initAsync = function () {
            theme.appearAnimate(".appear-animate"),
                alpha_vars.resource_disable_elementor && "object" != typeof elementorFrontend && (theme.appearAnimate(".elementor-invisible"), theme.countTo(".elementor-counter-number")),
                theme.minipopup.init(),
                theme.stickyContent(".sticky-content:not(.mobile-icon-bar):not(.sticky-toolbox)"),
                theme.stickyContent(".mobile-icon-bar", theme.defaults.stickyMobileBar),
                theme.stickyContent(".sticky-toolbox", theme.defaults.stickyToolbox),
                theme.initSlider(".slider-wrapper"),
                theme.playableVideo(".post-video"),
                theme.accordion(".card-header > a"),
                theme.tab(".nav-tabs:not(.alpha-comment-tabs)"),
                theme.alert(".alert"),
                theme.parallax(".parallax"),
                theme.countTo(".count-to"),
                theme.menu.init(),
                theme.initPopups(),
                theme.initAccount(),
                theme.initScrollTopButton(),
                theme.initScrollTo(),
                theme.initContactForms(),
                theme.initSearchForm(),
                theme.initVideoPlayer(),
                theme.initElementor(),
                theme.initVendorCompatibility(),
                theme.initFloatingElements(),
                theme.initAdvancedMotions(),
                theme.initKeyDown(),
                theme.liveSearch(),
                theme.initOffcanvas(),
                theme.$window.on("resize", theme.onResize),
                "load" == theme.status && (theme.status = "complete"),
                theme.$window.trigger("alpha_complete"),
                theme.showEditPageTooltip();
        });
})(jQuery);
